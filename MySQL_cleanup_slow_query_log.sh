###### This script is for automatically cleaning up slow query log files generated by MySQL ######
### Created in Ubuntu server ###
### This automation is intended for MySQL purposes ###

## Needs to enable general logging first ##
# /etc/mysql/mysql.conf.d -> nano mysqld.cnf

# From the config file: 
# 1 = ON and 0 = OFF
slow_query_log = 1
long_query_time = 60 #Set depending on threshold for your slow query logging
log_output = FILE
slow_query_log_file = /var/lib/mysql/mysql/slow_queries.log #Set depending on your slow query log dump

# Create new file and save the below script
#!/bin/bash

# Variables
LOG_FILE="/var/lib/mysql/mysql/slow_queries.log" ### Depending on your slow query log location (or from config file)
BACKUP_DIR="" ### Set destination path
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
BACKUP_FILE="$BACKUP_DIR/slow_queries_recorded_$TIMESTAMP.log"

# MySQL Credentials (Avoid hardcoding passwords in scripts when possible)
DB_USER=""
DB_PASS=""

# Ensure backup directory exists
# mkdir -p "$BACKUP_DIR"

# Copy the slow query log to backup location
cp "$LOG_FILE" "$BACKUP_FILE"

# Ensure MYSQL recognizes the cleared file
mysql -u "$DB_USER" -p"$DB_PASS" -e "FLUSH SLOW LOGS;"

# Clear the slow query log safely
> "$LOG_FILE"

# Set correct permissions (optional)
# chown mysql:mysql "$LOG_FILE"

# Remove old backup logs (older than 5 days)
find "$BACKUP_DIR" -type f -name "slow_queries_recorded_*.log" -mtime +5 -exec rm {} \;

echo "Slow query log backed up and cleared successfully: $BACKUP_FILE"
echo "Old logs older than 5 days have been removed."

## Open crontab -e ##
#Schedule this job to run depending on your requirements
0 7 * * * /<script location>/cleanup_slow_log.sh > /<log path location>/cleanup_slow_log.log 2>&1
